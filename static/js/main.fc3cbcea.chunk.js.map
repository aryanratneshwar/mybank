{"version":3,"sources":["2176472.png","navbar.js","Firebase.js","customerlist.js","card.js","customer.png","banktransfer.jpg","tran.png","ourservices.js","home.js","footer.js","transfertable.js","transferform.js","UserDetails.js","App.js","index.js"],"names":["navbar","className","src","logo","alt","style","color","href","fireDb","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","Customerlist","useState","userObjects","setUserObjects","useEffect","firebaseDb","child","on","snapshot","val","scope","Object","keys","map","id","Name","Email","Balance","Card","title","imageUrl","link","history","useHistory","onClick","push","service","Customer","Money","History","home","footer","Transfertable","from","to","money","Moneytransfer","name","value","userData","setUserData","postUserData","event","target","submitButton","a","preventDefault","alert","orderByChild","equalTo","once","exists","then","data","fetch","method","headers","body","JSON","stringify","data1","from_money","to_money","update","type","placeholder","onChange","UserDetails","props","Username","setUsername","Useremail","setUseremail","Userbalance","setUserbalance","match","params","console","log","userObjects1","setUserObjects1","data2","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc3cbcea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/2176472.95d69fc5.png\";","\r\n\r\nimport logo from './2176472.png'\r\nconst navbar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <img className=\"logo\" src={logo} alt=\"not found\" />\r\n            <h1 style={{ color: \"#EEA47FFF\" }}>SPARK BANK</h1>\r\n\r\n            <ul>\r\n                <li><a href=\"/home\">Home</a></li>\r\n                <li> <a href=\"/customerlist\">Customerlists</a></li>\r\n                <li><a href=\"/moneytransfer\"> Money Transfer</a></li>\r\n                <li><a href=\"/transferhistory\">Transfer History</a></li>\r\n            </ul>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default navbar;","// Import the functions you need from the SDKs you need\r\n// v9 compat packages are API compatible with v8 code\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/database\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDMKaJ1T-20mMwAHR7c5w9keVegByAZgyA\",\r\n  authDomain: \"spark-bank-a9c51.firebaseapp.com\",\r\n  projectId: \"spark-bank-a9c51\",\r\n  storageBucket: \"spark-bank-a9c51.appspot.com\",\r\n  messagingSenderId: \"972149285441\",\r\n  appId: \"1:972149285441:web:1e00551e93b9e6cfa39cc0\",\r\n  measurementId: \"G-FHSSV2R53K\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst fireDb = firebase.initializeApp(firebaseConfig);\r\nexport default  fireDb.database().ref();","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport firebaseDb from \"./Firebase\";\r\n// import { useHistory } from \"react-router\";\r\nfunction Customerlist () {\r\n    // var history = useHistory();\r\n\r\n    var [userObjects, setUserObjects] = useState({})\r\n    useEffect(() => {\r\n        firebaseDb.child('User').on('value', snapshot => {\r\n            if (snapshot.val() != null){\r\n\r\n                \r\n                setUserObjects({\r\n                    ...snapshot.val()\r\n                })\r\n            }\r\n            else\r\n                setUserObjects({})\r\n\r\n        })\r\n    }, []) \r\n\r\n    return (  \r\n        <div>\r\n            <div className=\"link\">List of Our Customers </div>\r\n            <table >\r\n                    <thead>\r\n                        <tr>\r\n                            {/* <th scope=\"col\">S.No.</th> */}\r\n                            <th scope=\"col\">Name</th>\r\n                           \r\n                            <th scope=\"col\">Email</th>\r\n                            \r\n                            <th scope=\"col\">Balance(₹)</th>\r\n                            <th scope=\"col\">Details</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                            Object.keys(userObjects).map(id => {\r\n                                return <tr key={id}>\r\n                                    {/* <th scope=\"row\"></th> */}\r\n                                    <td>{userObjects[id].Name}</td>\r\n                                   \r\n                                    <td>{userObjects[id].Email}</td>\r\n                                    \r\n                                    <td>{userObjects[id].Balance}₹</td>\r\n                                    <td className=\"tda\"><a  href={\"/customerlist/\"+ userObjects[id].Name} >ViewDetails</a></td>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Customerlist;","import { useHistory } from \"react-router\";\r\nconst Card = ({className,title,imageUrl,link}) => {\r\n    const history =useHistory();\r\n    return (\r\n        <div className={ className }>\r\n            <img  onClick = { ()=> history.push(link)} className=\"imgour\" src={imageUrl} alt=\"notloaded\" />\r\n           <a href={link}>{title}</a>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Card;","export default __webpack_public_path__ + \"static/media/customer.5cbc8f32.png\";","export default __webpack_public_path__ + \"static/media/banktransfer.be53c397.jpg\";","export default __webpack_public_path__ + \"static/media/tran.5f94a059.png\";","import Card from \"./card\";\r\nimport Customer from \"./customer.png\";\r\nimport Money from \"./banktransfer.jpg\";\r\nimport History from \"./tran.png\";\r\nconst service = () => {\r\n \r\n    return (  \r\n        <div>\r\n     <div className=\"service\">\r\n         <h1 >Our services</h1>\r\n     </div>\r\n     <div className =\"card\">\r\n    <Card className=\"cardclass cardclass1\" title=\"All Customers\" imageUrl={Customer} link=\"/customerlist\"/>\r\n    <Card className=\"cardclass  cardclass1\" title=\"Transfer Money\"  imageUrl={Money} link=\"/moneytransfer\"/>\r\n    <Card className=\"cardclass cardclass3\" title=\"Transfer History\"  imageUrl={History} link=\"/transferhistory\"/>\r\n     </div>\r\n     </div>\r\n\r\n    );\r\n    }\r\n \r\nexport default service;","import Service from \"./ourservices\";\r\nconst home = () => {\r\n    return ( \r\n        <div>\r\n        <div className=\" home\">\r\n        <h1 className=\"homeh1\">Welcome to the Homepage of the Spark Bank <p></p></h1>\r\n        <img className=\"homeicon\"src=\"https://onlinedigitalsevakendra.in/Content/HomePage/images/moneyTransfer%20Home.png\" alt=\"\" />\r\n        \r\n        </div>\r\n        <div>\r\n        <Service></Service>\r\n        </div>\r\n        </div>\r\n        \r\n\r\n     );\r\n}\r\n \r\nexport default home;","const footer\r\n = () => {\r\n    return (\r\n       <div className=\"footer\"> <h2> Copy right &copy; SparkBank.com. All rights reserved!</h2></div>\r\n      );\r\n}\r\n \r\nexport default footer\r\n;","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport firebaseDb from \"./Firebase\";\r\nfunction Transfertable () {\r\n\r\n    var [userObjects, setUserObjects] = useState({})\r\n    useEffect(() => {\r\n        firebaseDb.child('Transactions').on('value', snapshot => {\r\n            if (snapshot.val() != null){\r\n                setUserObjects({\r\n                    \r\n                    ...snapshot.val()\r\n                })\r\n            }\r\n            else\r\n                setUserObjects({})\r\n\r\n        })\r\n    }, []) \r\n\r\n    return (  \r\n        <div className=\"customer\">\r\n            <table >\r\n                    <thead>\r\n                        <tr>\r\n                            {/* <th scope=\"col\">S.No.</th> */}\r\n                            <th scope=\"col\">From</th>\r\n                           \r\n                            <th scope=\"col\">To</th>\r\n                            \r\n                            <th scope=\"col\">Transfered Balance(₹)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                            Object.keys(userObjects).map(id => {\r\n                                return <tr key={id}>\r\n                                    {/* <th scope=\"row\"></th> */}\r\n                                    <td>{userObjects[id].from}</td>\r\n                                   \r\n                                    <td>{userObjects[id].to}</td>\r\n                                    \r\n                                    <td>{userObjects[id].money}₹</td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                <a href=\"/customerlist\">View All Customers</a>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Transfertable;","import { useState } from \"react\";\r\nimport React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebaseDb from './Firebase'\r\n//import { Redirect } from 'react-router-dom'\r\nconst Moneytransfer = () => {\r\n    const history = useHistory();\r\n    const [userData, setUserData] = useState({\r\n        from: \"\",\r\n        to: \"\",\r\n        money: \"\"\r\n\r\n\r\n\r\n    });\r\n    let name, value;\r\n    const postUserData = (event) => {\r\n        name = event.target.name;\r\n\r\n        value = event.target.value;\r\n\r\n        setUserData({ ...userData, [name]: value });\r\n\r\n\r\n    };\r\n    // const submitButton = async (event) => {\r\n    //     event.preventDefault();\r\n    //     const { from,\r\n    //         to,\r\n    //         money } = userData;\r\n    //         if(money<1)\r\n    //         {                setUserData({\r\n\r\n    //             money: \"\"\r\n    //         });\r\n    //         alert(\"Fill the Valid Value\")\r\n    //     }\r\n\r\n\r\n\r\n    //     else if (from &&\r\n    //         to &&\r\n    //         money) {\r\n\r\n\r\n\r\n\r\n    //            firebaseDb.child('User').orderByChild('Name').equalTo(from).once(\"value\",snapshot => {\r\n    //             if (snapshot.exists()){\r\n    //                 firebaseDb.child('User').orderByChild('Name').equalTo(to).once(\"value\",snapshot => {\r\n    //                     if (snapshot.exists()){\r\n\r\n\r\n\r\n    //     const res = fetch(\r\n    //             \"https://spark-bank-a9c51-default-rtdb.firebaseio.com/Transactions.json\",\r\n    //             {\r\n    //                 method: \"POST\",\r\n    //                 headers: {\r\n    //                     \"Content-Type\": \"application/json\",\r\n    //                 },\r\n    //                 body: JSON.stringify({\r\n    //                     from,\r\n    //                     to,\r\n    //                     money\r\n    //                 })\r\n    //             }\r\n    //         );\r\n\r\n    //         if (res) {\r\n    //             setUserData({\r\n    //                 from: \"\",\r\n    //                 to: \"\",\r\n    //                 money: \"\"\r\n    //             });\r\n\r\n    //             // alert(\"Money Transfer\");\r\n\r\n    //                 history.push('/transferhistory');\r\n    //         }\r\n    //         else {\r\n    //             setUserData({\r\n    //                 from: \"\",\r\n    //                 to: \"\",\r\n    //                 money: \"\"\r\n    //             });\r\n    //             alert(\"Fill the correct Data\")\r\n    //         }\r\n    //     }\r\n    //         else{\r\n    //             setUserData({\r\n\r\n    //                 to: \"\"\r\n\r\n    //             });\r\n    //             alert(\"The Reciver Doesn,t Exist\");\r\n    //         }\r\n    //     });\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //     }\r\n    //     else{\r\n    //         setUserData({\r\n    //             from: \"\"\r\n    //         });\r\n    //         alert(\"The Sender Doesn't Exist\");\r\n    //     }\r\n    // });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //     }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //     else{\r\n    //         setUserData({\r\n    //             from: \"\",\r\n    //             to: \"\",\r\n    //             money: \"\"\r\n    //         });\r\n    //         alert(\"Fill the Data completely\")\r\n    //     }\r\n    // }\r\n    const submitButton = async (event) => {\r\n        event.preventDefault();\r\n        const { from,\r\n            to,\r\n            money } = userData;\r\n        if (money < 1) {\r\n            setUserData({\r\n                money: \"\"\r\n            });\r\n            alert(\"Fill the Valid Value\")\r\n        }\r\n\r\n\r\n\r\n        else if (from &&\r\n            to &&\r\n            money) {\r\n            firebaseDb.child('User').orderByChild('Name').equalTo(from).once(\"value\", snapshot => {\r\n                if (snapshot.exists()) {\r\n                    firebaseDb.child('User').orderByChild('Name').equalTo(to).once(\"value\", snapshot => {\r\n                        if (snapshot.exists()) {\r\n\r\n                            firebaseDb.child('User').child(from).child('Balance').once(\"value\").then(data => {\r\n                                if (data.val() !== null) {\r\n                                    if (data.val() >= money) {\r\n                                        const res = fetch(\r\n                                            \"https://spark-bank-a9c51-default-rtdb.firebaseio.com/Transactions.json\",\r\n                                            {\r\n                                                method: \"POST\",\r\n                                                headers: {\r\n                                                    \"Content-Type\": \"application/json\",\r\n                                                },\r\n                                                body: JSON.stringify({\r\n                                                    from,\r\n                                                    to,\r\n                                                    money\r\n                                                })\r\n                                            }\r\n                                        );\r\n                                        if (res) {\r\n                                            setUserData({\r\n                                                from: \"\",\r\n                                                to: \"\",\r\n                                                money: \"\"\r\n                                            });\r\n                                            firebaseDb.child('User').child(to).child('Balance').once(\"value\").then(data1 => {\r\n                                                if(data1.val() !== null){\r\n                                            let from_money = data.val() - money;\r\n                                            let to_money = +(data1.val()) + +(money);\r\n                                            alert(\"Money Transfer\");\r\n                                            firebaseDb.child('User').child(from).update({'Balance': from_money});\r\n                                            firebaseDb.child('User').child(to).update({'Balance': to_money});\r\n                                                }\r\n                                        });\r\n                                            history.push('/transferhistory');\r\n                                        }\r\n                                        else {\r\n                                            setUserData({\r\n                                                from: \"\",\r\n                                                to: \"\",\r\n                                                money: \"\"\r\n                                            });\r\n                                            alert(\"Fill the correct Data\");\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        \r\n                                        alert(\"Sende's Balance is less \");\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        }\r\n                        else {\r\n                            setUserData({\r\n                                from: \"\",\r\n                                to: \"\",\r\n                                money: \"\"\r\n                            });\r\n                            alert(\"The Receiver Doesn't Exist \");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    setUserData({\r\n                        from: \"\",\r\n                        to: \"\",\r\n                        money: \"\"\r\n                    });\r\n                    alert(\"The Sender Doesn't Exist\");\r\n                }\r\n\r\n            });\r\n        }\r\n        else {\r\n            setUserData({\r\n                from: \"\",\r\n                to: \"\",\r\n                money: \"\"\r\n            });\r\n            alert(\"Fill the Data completely\")\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"forms\">\r\n            <h1> Transfer money to your family and friends</h1>\r\n            <form method=\"POST\">\r\n                <label className=\"lable\">\r\n                    <h2>From:</h2>\r\n                    <input type=\"text\" name=\"from\" id=\"name1\" placeholder=\"Enter The Sender Name\" value={userData.from} onChange={postUserData} />\r\n                </label>\r\n\r\n                <label className=\"lable\">\r\n                    <h2>To:</h2>\r\n                    <input type=\"text\" name=\"to\" id=\"name2\" placeholder=\"Enter The Reciever Name\" value={userData.to} onChange={postUserData} />\r\n                </label>\r\n\r\n                <label className=\"lable\">\r\n                    <h2>Transfered Amount:</h2>\r\n                    <input type=\"number\" name=\"money\" id=\"email\" placeholder=\"Enter the amount\" value={userData.money} onChange={postUserData} />\r\n                </label>\r\n\r\n\r\n\r\n                <button className=\"submit\" onClick={submitButton}>Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Moneytransfer;","import { useState } from 'react';\r\nimport firebaseDb from './Firebase';\r\nimport { useEffect } from 'react';\r\nconst UserDetails = (props) => {   \r\n    const [Username, setUsername] = useState('');\r\n    const [Useremail, setUseremail] = useState('');\r\n    const [Userbalance, setUserbalance] = useState('');\r\n    \r\n    var [userObjects, setUserObjects] = useState({})\r\n    useEffect(() => {\r\n        firebaseDb.child('Transactions').orderByChild('from').equalTo(props.match.params.name).on('value', snapshot => {\r\n            if (snapshot.val() != null) {\r\n                console.log(snapshot.val());\r\n                setUserObjects({\r\n                    ...snapshot.val()\r\n                })\r\n            }\r\n            else\r\n                setUserObjects({})\r\n\r\n        })\r\n    }, [props.match.params.name])\r\n    var [userObjects1, setUserObjects1] = useState({})\r\n    useEffect(() => {\r\n        firebaseDb.child('Transactions').orderByChild('to').equalTo(props.match.params.name).on('value', snapshot => {\r\n            if (snapshot.val() != null) {\r\n                console.log(snapshot.val());\r\n                setUserObjects1({\r\n                    ...snapshot.val()\r\n                })\r\n            }\r\n            else\r\n                setUserObjects1({})\r\n\r\n        })\r\n    }, [props.match.params.name])\r\n    firebaseDb.child('User').child(props.match.params.name).child('Name').once(\"value\").then(data => {\r\n        if(data.val() !== null){\r\n            setUsername(data.val());\r\n        }\r\n    });\r\n    firebaseDb.child('User').child(props.match.params.name).child('Email').once(\"value\").then(data1 => {\r\n        if(data1.val() !== null){\r\n            setUseremail(data1.val());\r\n        }\r\n    });\r\n    firebaseDb.child('User').child(props.match.params.name).child(\"Balance\").once(\"value\").then(data2 => {\r\n        if(data2.val() !== null){\r\n            setUserbalance(data2.val());\r\n        }\r\n    });\r\n\r\n    // console.log(Username + \" \" + Useremail + \" \" + Userbalance + \" \" + props.match.params.name);\r\n    return (  \r\n        <div className=\"userdetails\">\r\n            <div className=\"userdetailsinfo\">\r\n            <div className=\"name\">Name: { Username }</div>\r\n            <div className=\"email\">Email: { Useremail }</div>\r\n            <div className=\"balance\">Balance: { Userbalance }</div>\r\n            </div>\r\n            <div className=\"from\">\r\n                <h1>Money transfer from {props.match.params.name}</h1>\r\n            <table >\r\n                    <thead>\r\n                        <tr>\r\n                            {/* <th scope=\"col\">S.No.</th> */}\r\n                            <th scope=\"col\">From</th>\r\n                            <th scope=\"col\">To</th>\r\n                            <th scope=\"col\">Money(₹)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                            Object.keys(userObjects).map(id => {\r\n                                return <tr key={id}>\r\n                                    {/* <th scope=\"row\"></th> */}\r\n                                    <td>{userObjects[id].from}</td>\r\n                                    <td>{userObjects[id].to}</td>\r\n                                    <td>₹ {userObjects[id].money}</td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"to\">\r\n            <h1>Money transfer to {props.match.params.name}</h1>\r\n            <table >\r\n                    <thead>\r\n                        <tr>\r\n                            {/* <th scope=\"col\">S.No.</th> */}\r\n                            <th scope=\"col\">From</th>\r\n                            <th scope=\"col\">To</th>\r\n                            <th scope=\"col\">Money(₹)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                            Object.keys(userObjects1).map(id => {\r\n                                return <tr key={id}>\r\n                                    {/* <th scope=\"row\"></th> */}\r\n                                    <td>{userObjects1[id].from}</td>\r\n                                    <td>{userObjects1[id].to}</td>\r\n                                    <td>₹ {userObjects1[id].money}</td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default UserDetails;","import Navbar from './navbar';\nimport Customerlist from './customerlist';\nimport Home from './home';\nimport Footer from './footer';\nimport Transfertable from './transfertable';\nimport Moneytransfer from './transferform';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport UserDetails from './UserDetails';\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar></Navbar>\n        \n          <Switch>\n            <Route exact path=\"/\">\n           <Home></Home>\n            </Route>\n            <Route exact path=\"/home\">\n            <Home></Home>\n            </Route>\n            <Route exact path=\"/customerlist\">\n             <Customerlist></Customerlist>\n            </Route>\n            <Route exact path=\"/moneytransfer\">\n             <Moneytransfer/>\n            </Route>\n            <Route exact path=\"/transferhistory\">\n             <Transfertable></Transfertable>\n            </Route>\n            <Route exact path =\"/customerlist/:name\"  component={UserDetails}/>\n            \n          </Switch>\n          <Footer></Footer>\n        \n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}